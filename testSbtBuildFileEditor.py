import unittest
from io import StringIO
from .sbtBuildFileEditor import SbtBuildFileEditor


class TestSbtBuildFileEditor(unittest.TestCase):

    def setUp(self):
        self.memFile = StringIO()
        self.fileEditor = SbtBuildFileEditor(self.memFile)
        self.commentString = "\n\n// ----- This part is generated by Scala Project Generator Facade plugin -----"

    def testSimpleTransformation(self):
        t = ('foo', 'bar')

        self.fileEditor.simpleTransformation(t)

        expected = self.commentString + '\n\nfoo := bar'
        self.__assertEqualContent(expected)

    def testSimpleTransformationBatch(self):
        t = [('foo', 'bar'), ('fi', 'bo')]

        self.fileEditor.simpleTransformationBatch(t)

        expected = self.commentString + '\n\nfoo := bar\n\nfi := bo'
        self.__assertEqualContent(expected)

    def testTransformationUsingOtherKey(self):
        t = ('foo', 'bar')

        self.fileEditor.transformUsingOtherKey(t)

        expected = self.commentString + '\n\nfoo <<= bar'
        self.__assertEqualContent(expected)

    def testTransformationUsingOtherKeyBatch(self):
        t = [('foo', 'bar'), ('fi', 'bo')]

        self.fileEditor.transformUsingOtherKeyBatch(t)

        expected = self.commentString + '\n\nfoo <<= bar\n\nfi <<= bo'
        self.__assertEqualContent(expected)

    def __assertEqualContent(self, expected):
        self.memFile.seek(0)
        result = self.memFile.read()
        self.assertEqual(result, expected)
